% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/iac_cycle.R
\name{sim_batch}
\alias{sim_batch}
\title{Run a batch of simulations.}
\usage{
sim_batch(network, nsims, ncycles)
}
\arguments{
\item{network}{The network}

\item{nsims}{The number of simulations in this batch}

\item{ncycles}{The number of cycles for each sim}
}
\value{
A dataframe where columns represent sim number, cycle, and every unit
in the network, and rows provide activations for each unit on each cycle of
each sim.
}
\description{
This is useful when you want to generate a
distrbution of results while using the noise parameter. Without noise, every
run of a network will be the same, and so there's not much point in running
a batch.
}
\details{
The \code{noise} param can be set in the network .yaml file, or manually as
\code{network$params$noise = .01} (or whatever value)
}
\examples{
\dontrun{
# This would take time to run
library(lattice)
library(directlabels)
jetsh = read_net(iac_example("jets_sharks.yaml"))
jetsh = set_external(jetsh, "Ken", 1.0)
# add random noise to the network
jetsh$params$noise = .01
outK = sim_batch(jetsh, nsims = 10, ncycles = 50)
outK$task = "Ken"
jetsh = reset(jetsh)
jetsh = set_external(jetsh, "Al", 1.0)
outA = sim_batch(jetsh, nsims = 10, ncycles = 50)
outA$task = "Al"
# compare the two tasks
out = rbind(outA, outK)
plot_acts(out, cond = "task", roi = c("Ken", "Al", "jets", "sharks"))
}
}
\seealso{
read_net(), cycle(), plot_acts()
}
