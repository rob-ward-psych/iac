% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/iac_utils.R
\name{plot_acts}
\alias{plot_acts}
\title{Plot selected unit activations by cycle with formula and labels}
\usage{
plot_acts(
  log,
  roi,
  condition = NULL,
  cycles = NULL,
  labelstyle = "last.bumpup",
  ...
)
}
\arguments{
\item{log}{A dataframe of unit activations. Unlike the
regular plot_log fn, this can also plot the output of
sim_batch(). The plotted results are the mean activation of each cycle. One
of the columns must be named "cycle" (as will be the case if a network$log
or output from sim_batch is plotted)}

\item{roi}{A vector specifying which columns to plot, this can be either
numeric values specifying indices, or ideally, unit names}

\item{condition}{The name of a column which will serve as a conditional
variable, that is, unit activations will be plotted as function of the
different levels of this factor (e.g. "accuracy" might have correct and
incorrect, meaning all unit activations will have a value for corret and
incorrect trials)}

\item{cycles}{An optional vector of cycle numbers to be plotted. The default
is to plot all cycles,}

\item{labelstyle}{A label style that is valid for the directlabels package
(default = "last.bumpup")}

\item{...}{
  Arguments passed on to \code{\link[lattice:xyplot]{lattice::xyplot}}
  \describe{
    \item{\code{x}}{
    All high-level function in \pkg{lattice} are generic.  \code{x} is
    the object on which method dispatch is carried out.

    For the \code{"formula"} methods, \code{x} must be a formula
    describing the primary variables (used for the per-panel display)
    and the optional conditioning variables (which define the subsets
    plotted in different panels) to be used in the plot.  Conditioning
    is described in the \dQuote{Details} section below.  

    For the functions documented here, the formula is generally of the
    form \code{y ~ x | g1 * g2 * \dots} (or equivalently, \code{y ~ x |
    g1 + g2 + \dots}), indicating that plots of \code{y} (on the y-axis)
    versus \code{x} (on the x-axis) should be produced conditional on
    the variables \code{g1, g2, \dots}.  Here \code{x} and \code{y} are
    the primary variables, and \code{g1, g2, \dots} are the conditioning
    variables.  The conditioning variables may be omitted to give a
    formula of the form \code{y ~ x}, in which case the plot will
    consist of a single panel with the full dataset.  The formula can
    also involve expressions, e.g., \code{sqrt()}, \code{log()}, etc.
    See the \code{data} argument below for rules regarding evaluation of
    the terms in the formula.

    With the exception of \code{xyplot}, the functions documented here
    may also be supplied a formula of the form \code{ ~ x | g1 * g2 *
    \dots}.  In that case, \code{y} defaults to \code{names(x)} if
    \code{x} is named, and a factor with a single level otherwise.

    Cases where \code{x} is not a formula is handled by appropriate
    methods.  The \code{numeric} methods are equivalent to a call with
    no left hand side and no conditioning variables in the formula.  For
    \code{barchart} and \code{dotplot}, non-trivial methods exist for
    tables and arrays, documented at \code{\link[lattice]{barchart.table}}.

    The conditioning variables \code{g1, g2, \dots} must be either
    factors or shingles.  Shingles provide a way of using numeric
    variables for conditioning; see the help page of
    \code{\link[lattice]{shingle}} for details. Like factors, they have a
    \code{"levels"} attribute, which is used in producing the
    conditional plots.  If necessary, numeric conditioning variables are
    converted to shingles using the \code{shingle} function; however,
    using \code{\link[lattice]{equal.count}} may be more appropriate in many
    cases.  Character variables are coerced to factors.

    %% As an extension of the interpretation described above, 
    % A special case is when the left and/or right sides of the
    % Formulas containing a \sQuote{+} sign in the specification of
    % primary variables before the conditioning variables) contain a \sQuote{+} sign, e.g.,
    % \code{y1 + y2 ~ x | a*b}.

    \bold{Extended formula interface:} As a useful extension of the
    interface described above, the primary variable terms (both the LHS
    \code{y} and RHS \code{x}) may consist of multiple terms separated
    by a \sQuote{+} sign, e.g., \code{y1 + y2 ~ x | a * b}.  This
    formula would be taken to mean that the user wants to plot both
    \code{y1 ~ x | a * b} and \code{y2 ~ x | a * b}, but with the
    \code{y1 ~ x} and \code{y2 ~ x} superposed in each panel.  The two
    groups will be distinguished by different graphical parameters.
    This is essentially what the \code{groups} argument (see below)
    would produce, if \code{y1} and \code{y2} were concatenated to
    produce a longer vector, with the \code{groups} argument being an
    indicator of which rows come from which variable.  In fact, this is
    exactly what is done internally using the \code{\link{reshape}}
    function. This feature cannot be used in conjunction with the
    \code{groups} argument.

    To interpret \code{y1 + y2} as a sum, one can either set
    \code{allow.multiple=FALSE} or use \code{I(y1+y2)}.

    A variation on this feature is when the \code{outer} argument is set
    to \code{TRUE}. In that case, the plots are not superposed in each
    panel, but instead separated into different panels (as if a new
    conditioning variable had been added).

    \bold{Primary variables:} The \code{x} and \code{y} variables should
    both be numeric in \code{xyplot}, and an attempt is made to coerce
    them if not. However, if either is a factor, the levels of that
    factor are used as axis labels. In the other four functions
    documented here, exactly one of \code{x} and \code{y} should be
    numeric, and the other a factor or shingle. Which of these will
    happen is determined by the \code{horizontal} argument --- if
    \code{horizontal=TRUE}, then \code{y} will be coerced to be a factor
    or shingle, otherwise \code{x}. The default value of
    \code{horizontal} is \code{FALSE} if \code{x} is a factor or
    shingle, \code{TRUE} otherwise. (The functionality provided by
    \code{horizontal=FALSE} is not S-compatible.)

    Note that the \code{x} argument used to be called \code{formula} in
    earlier versions (when the high-level functions were not generic and
    the formula method was essentially the only method).  This is no
    longer allowed.  It is recommended that this argument not be named
    in any case, but instead be the first (unnamed) argument.
  }
    \item{\code{data}}{
    For the \code{formula} methods, a data frame (or more precisely,
    anything that is a valid \code{envir} argument in
    \code{\link{eval}}, e.g., a list or an environment) containing values
    for any variables in the formula, as well as \code{groups} and
    \code{subset} if applicable.  If not found in \code{data}, or if
    \code{data} is unspecified, the variables are looked for in the
    environment of the formula.  For other methods (where \code{x} is
    not a formula), \code{data} is usually ignored, often with a warning
    if it is explicitly specified.
  }
  }}
}
\description{
Make a quick plot of selected unit activations, using the lattice and
directlabels packages. There is a bug where an roi of a single unit
doesn't work.
}
\seealso{
read_net(), set_external(), cycle(), reset()
}
