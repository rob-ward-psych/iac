% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/iac_utils.R
\name{plot_acts}
\alias{plot_acts}
\title{Plot selected units when using sim_batch}
\usage{
plot_acts(
  toplot,
  roi,
  condition = NULL,
  cycles = NULL,
  labelstyle = "last.bumpup",
  ...
)
}
\arguments{
\item{toplot}{A dataframe of unit activations. Unlike the
regular plot_log fn, this can also plot the output of
\code{sim_batch()}. The plotted results are the mean activation of each cycle. One
of the columns must be named "cycle" (as will be the case if a \code{network$log}
or output from sim_batch is plotted)}

\item{roi}{A vector specifying which columns to plot, this can be either
numeric values specifying indices, or ideally, unit names}

\item{condition}{The name of a column which will serve as a conditional
variable, that is, unit activations will be plotted as function of the
different levels of this factor (e.g. "accuracy" might have correct and
incorrect, meaning all unit activations will have a value for corret and
incorrect trials)}

\item{cycles}{An optional vector of cycle numbers to be plotted. The default
is to plot all cycles,}

\item{labelstyle}{A label style that is valid for the directlabels package
(default = "last.bumpup")}

\item{...}{The various optional arguments for \code{lattice::xyplot}, xlab, layout, etc}
}
\description{
Make a quick plot of selected unit activations, using the lattice and
directlabels packages. There is a bug where an roi of a single unit
doesn't work.
}
\examples{
\dontrun{
# This would take time to run
library(lattice)
library(directlabels)
jetsh = read_net(iac_example("jets_sharks.yaml"))
jetsh = set_external(jetsh, "Ken", 1.0)
# add random noise to the network
jetsh$params$noise = .01
outK = sim_batch(jetsh, nsims = 10, ncycles = 50)
outK$task = "Ken"
jetsh = reset(jetsh)
jetsh = set_external(jetsh, "Al", 1.0)
outA = sim_batch(jetsh, nsims = 10, ncycles = 50)
outA$task = "Al"
# compare the two tasks
out = rbind(outA, outK)
plot_acts(out, cond = "task", roi = c("Ken", "Al", "jets", "sharks"))
}

}
\seealso{
sim_batch()
}
